import{r as p,o,c,a as n,b as t,F as l,d as s,e}from"./app.ccf5a8e7.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";const i={},r=n("h1",{id:"extra-plugins",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#extra-plugins","aria-hidden":"true"},"#"),s(" Extra Plugins")],-1),k=n("p",null,"Every plugin that works with Neovim works with LunarVim, here are some examples to get you started.",-1),d=n("h2",{id:"navigation-plugins",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#navigation-plugins","aria-hidden":"true"},"#"),s(" Navigation plugins")],-1),b={id:"hop",tabindex:"-1"},m=n("a",{class:"header-anchor",href:"#hop","aria-hidden":"true"},"#",-1),g=s(),h={href:"https://github.com/phaazon/hop.nvim",target:"_blank",rel:"noopener noreferrer"},_=s("hop"),v=e(`<p><strong>neovim motions on speed!</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;phaazon/hop.nvim&quot;</span><span class="token punctuation">,</span>
  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>
  config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;hop&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    vim<span class="token punctuation">.</span>api<span class="token punctuation">.</span><span class="token function">nvim_set_keymap</span><span class="token punctuation">(</span><span class="token string">&quot;n&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;s&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;:HopChar2&lt;cr&gt;&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> silent <span class="token operator">=</span> <span class="token keyword">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
    vim<span class="token punctuation">.</span>api<span class="token punctuation">.</span><span class="token function">nvim_set_keymap</span><span class="token punctuation">(</span><span class="token string">&quot;n&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;S&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;:HopWord&lt;cr&gt;&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> silent <span class="token operator">=</span> <span class="token keyword">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">end</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>`,2),q={id:"lightspeed",tabindex:"-1"},f=n("a",{class:"header-anchor",href:"#lightspeed","aria-hidden":"true"},"#",-1),w=s(),y={href:"https://github.com/ggandor/lightspeed.nvim",target:"_blank",rel:"noopener noreferrer"},x=s("lightspeed"),B=e(`<p><strong>jetpack codebase navigation</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;ggandor/lightspeed.nvim&quot;</span><span class="token punctuation">,</span>
  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>`,2),R={id:"minimap",tabindex:"-1"},G=n("a",{class:"header-anchor",href:"#minimap","aria-hidden":"true"},"#",-1),T=s(),z={href:"https://github.com/wfxr/minimap.vim",target:"_blank",rel:"noopener noreferrer"},C=s("minimap"),S=e(`<p><strong>blazing fast minimap/scrollbar written in Rust</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&#39;wfxr/minimap.vim&#39;</span><span class="token punctuation">,</span>
  run <span class="token operator">=</span> <span class="token string">&quot;cargo install --locked code-minimap&quot;</span><span class="token punctuation">,</span>
  <span class="token comment">-- cmd = {&quot;Minimap&quot;, &quot;MinimapClose&quot;, &quot;MinimapToggle&quot;, &quot;MinimapRefresh&quot;, &quot;MinimapUpdateHighlight&quot;},</span>
  config <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>
    vim<span class="token punctuation">.</span><span class="token function">cmd</span> <span class="token punctuation">(</span><span class="token string">&quot;let g:minimap_width = 10&quot;</span><span class="token punctuation">)</span>
    vim<span class="token punctuation">.</span><span class="token function">cmd</span> <span class="token punctuation">(</span><span class="token string">&quot;let g:minimap_auto_start = 1&quot;</span><span class="token punctuation">)</span>
    vim<span class="token punctuation">.</span><span class="token function">cmd</span> <span class="token punctuation">(</span><span class="token string">&quot;let g:minimap_auto_start_win_enter = 1&quot;</span><span class="token punctuation">)</span>
  <span class="token keyword">end</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>`,2),E={id:"numb",tabindex:"-1"},P=n("a",{class:"header-anchor",href:"#numb","aria-hidden":"true"},"#",-1),A=s(),j={href:"https://github.com/nacro90/numb.nvim",target:"_blank",rel:"noopener noreferrer"},N=s("numb"),F=e(`<p><strong>jump to the line</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;nacro90/numb.nvim&quot;</span><span class="token punctuation">,</span>
  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>
  config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;numb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setup</span> <span class="token punctuation">{</span>
    show_numbers <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span> <span class="token comment">-- Enable &#39;number&#39; for the window while peeking</span>
    show_cursorline <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span> <span class="token comment">-- Enable &#39;cursorline&#39; for the window while peeking</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">end</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>`,2),L={id:"nvim-bqf",tabindex:"-1"},V=n("a",{class:"header-anchor",href:"#nvim-bqf","aria-hidden":"true"},"#",-1),I=s(),M={href:"https://github.com/kevinhwang91/nvim-bqf",target:"_blank",rel:"noopener noreferrer"},W=s("nvim-bqf"),H=e(`<p><strong>better quickfix window</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;kevinhwang91/nvim-bqf&quot;</span><span class="token punctuation">,</span>
  event <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;BufNew&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;bqf&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          auto_enable <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span>
          preview <span class="token operator">=</span> <span class="token punctuation">{</span>
          win_height <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">,</span>
          win_vheight <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">,</span>
          delay_syntax <span class="token operator">=</span> <span class="token number">80</span><span class="token punctuation">,</span>
          border_chars <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;\u2503&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u2503&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u2501&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u2501&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u250F&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u2513&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u2517&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u251B&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u2588&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          func_map <span class="token operator">=</span> <span class="token punctuation">{</span>
          vsplit <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
          ptogglemode <span class="token operator">=</span> <span class="token string">&quot;z,&quot;</span><span class="token punctuation">,</span>
          stoggleup <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          filter <span class="token operator">=</span> <span class="token punctuation">{</span>
          fzf <span class="token operator">=</span> <span class="token punctuation">{</span>
          action_for <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span><span class="token string">&quot;ctrl-s&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;split&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
          extra_opts <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;--bind&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ctrl-o:toggle-all&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;--prompt&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&gt; &quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">end</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div>`,2),D={id:"nvim-spectre",tabindex:"-1"},O=n("a",{class:"header-anchor",href:"#nvim-spectre","aria-hidden":"true"},"#",-1),J=s(),K={href:"https://github.com/windwp/nvim-spectre",target:"_blank",rel:"noopener noreferrer"},Q=s("nvim-spectre"),U=e(`<p><strong>search and replace</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;windwp/nvim-spectre&quot;</span><span class="token punctuation">,</span>
  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>
  config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;spectre&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">end</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>`,2),Y={id:"rnvimr",tabindex:"-1"},X=n("a",{class:"header-anchor",href:"#rnvimr","aria-hidden":"true"},"#",-1),Z=s(),$={href:"https://github.com/kevinhwang91/rnvimr",target:"_blank",rel:"noopener noreferrer"},nn=s("rnvimr"),sn=e(`<p><strong>ranger file explorer window</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;kevinhwang91/rnvimr&quot;</span><span class="token punctuation">,</span>
    cmd <span class="token operator">=</span> <span class="token string">&quot;RnvimrToggle&quot;</span><span class="token punctuation">,</span>
    config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      vim<span class="token punctuation">.</span>g<span class="token punctuation">.</span>rnvimr_draw_border <span class="token operator">=</span> <span class="token number">1</span>
      vim<span class="token punctuation">.</span>g<span class="token punctuation">.</span>rnvimr_pick_enable <span class="token operator">=</span> <span class="token number">1</span>
      vim<span class="token punctuation">.</span>g<span class="token punctuation">.</span>rnvimr_bw_enable <span class="token operator">=</span> <span class="token number">1</span>
      <span class="token keyword">end</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>`,2),an={id:"snap",tabindex:"-1"},tn=n("a",{class:"header-anchor",href:"#snap","aria-hidden":"true"},"#",-1),en=s(),pn={href:"https://github.com/camspiers/snap",target:"_blank",rel:"noopener noreferrer"},on=s("snap"),cn=e(`<p><strong>fast finder system</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;camspiers/snap&quot;</span><span class="token punctuation">,</span>
  rocks <span class="token operator">=</span> <span class="token string">&quot;fzy&quot;</span><span class="token punctuation">,</span>
  config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">local</span> snap <span class="token operator">=</span> require <span class="token string">&quot;snap&quot;</span>
    <span class="token keyword">local</span> layout <span class="token operator">=</span> snap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;layout&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>bottom
    <span class="token keyword">local</span> file <span class="token operator">=</span> snap<span class="token punctuation">.</span>config<span class="token punctuation">.</span>file<span class="token punctuation">:</span><span class="token function">with</span> <span class="token punctuation">{</span> consumer <span class="token operator">=</span> <span class="token string">&quot;fzy&quot;</span><span class="token punctuation">,</span> layout <span class="token operator">=</span> layout <span class="token punctuation">}</span>
    <span class="token keyword">local</span> vimgrep <span class="token operator">=</span> snap<span class="token punctuation">.</span>config<span class="token punctuation">.</span>vimgrep<span class="token punctuation">:</span><span class="token function">with</span> <span class="token punctuation">{</span> layout <span class="token operator">=</span> layout <span class="token punctuation">}</span>
    snap<span class="token punctuation">.</span>register<span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&quot;find_files&quot;</span><span class="token punctuation">,</span> <span class="token function">file</span> <span class="token punctuation">{</span> producer <span class="token operator">=</span> <span class="token string">&quot;ripgrep.file&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
    snap<span class="token punctuation">.</span>register<span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&quot;buffers&quot;</span><span class="token punctuation">,</span> <span class="token function">file</span> <span class="token punctuation">{</span> producer <span class="token operator">=</span> <span class="token string">&quot;vim.buffer&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
    snap<span class="token punctuation">.</span>register<span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&quot;oldfiles&quot;</span><span class="token punctuation">,</span> <span class="token function">file</span> <span class="token punctuation">{</span> producer <span class="token operator">=</span> <span class="token string">&quot;vim.oldfile&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
    snap<span class="token punctuation">.</span>register<span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&quot;live_grep&quot;</span><span class="token punctuation">,</span> <span class="token function">vimgrep</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">end</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div>`,2),ln={id:"vim-matchup",tabindex:"-1"},un=n("a",{class:"header-anchor",href:"#vim-matchup","aria-hidden":"true"},"#",-1),rn=s(),kn={href:"https://github.com/andymass/vim-matchup",target:"_blank",rel:"noopener noreferrer"},dn=s("vim-matchup"),bn=e(`<p><strong>navigate and highlight matching words</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;andymass/vim-matchup&quot;</span><span class="token punctuation">,</span>
  event <span class="token operator">=</span> <span class="token string">&quot;CursorMoved&quot;</span><span class="token punctuation">,</span>
  config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    vim<span class="token punctuation">.</span>g<span class="token punctuation">.</span>matchup_matchparen_offscreen <span class="token operator">=</span> <span class="token punctuation">{</span> method <span class="token operator">=</span> <span class="token string">&quot;popup&quot;</span> <span class="token punctuation">}</span>
  <span class="token keyword">end</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="git" tabindex="-1"><a class="header-anchor" href="#git" aria-hidden="true">#</a> Git</h2>`,3),mn={id:"diffview",tabindex:"-1"},gn=n("a",{class:"header-anchor",href:"#diffview","aria-hidden":"true"},"#",-1),hn=s(),_n={href:"https://github.com/sindrets/diffview.nvim",target:"_blank",rel:"noopener noreferrer"},vn=s("diffview"),qn=e(`<p><strong>git diff in a single tabpage</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;sindrets/diffview.nvim&quot;</span><span class="token punctuation">,</span>
  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>`,2),fn={id:"git-blame",tabindex:"-1"},wn=n("a",{class:"header-anchor",href:"#git-blame","aria-hidden":"true"},"#",-1),yn=s(),xn={href:"https://github.com/f-person/git-blame.nvim",target:"_blank",rel:"noopener noreferrer"},Bn=s("git-blame"),Rn=e(`<p><strong>show git blame</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;f-person/git-blame.nvim&quot;</span><span class="token punctuation">,</span>
  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>
  config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    vim<span class="token punctuation">.</span>cmd <span class="token string">&quot;highlight default link gitblame SpecialComment&quot;</span>
    vim<span class="token punctuation">.</span>g<span class="token punctuation">.</span>gitblame_enabled <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token keyword">end</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>`,2),Gn={id:"gitlinker",tabindex:"-1"},Tn=n("a",{class:"header-anchor",href:"#gitlinker","aria-hidden":"true"},"#",-1),zn=s(),Cn={href:"https://github.com/ruifm/gitlinker.nvim",target:"_blank",rel:"noopener noreferrer"},Sn=s("gitlinker"),En=e(`<p><strong>generate shareable file permalinks for several git web frontend hosts</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;ruifm/gitlinker.nvim&quot;</span><span class="token punctuation">,</span>
  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>
  config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;gitlinker&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setup</span> <span class="token punctuation">{</span>
        opts <span class="token operator">=</span> <span class="token punctuation">{</span>
          <span class="token comment">-- remote = &#39;github&#39;, -- force the use of a specific remote</span>
            <span class="token comment">-- adds current line nr in the url for normal mode</span>
            add_current_line_on_normal_mode <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span>
          <span class="token comment">-- callback for what to do with the url</span>
            action_callback <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;gitlinker.actions&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>open_in_browser<span class="token punctuation">,</span>
          <span class="token comment">-- print the url after performing the action</span>
            print_url <span class="token operator">=</span> <span class="token keyword">false</span><span class="token punctuation">,</span>
          <span class="token comment">-- mapping to call url generation</span>
            mappings <span class="token operator">=</span> <span class="token string">&quot;&lt;leader&gt;gy&quot;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
  <span class="token keyword">end</span><span class="token punctuation">,</span>
  requires <span class="token operator">=</span> <span class="token string">&quot;nvim-lua/plenary.nvim&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div>`,2),Pn={id:"octo",tabindex:"-1"},An=n("a",{class:"header-anchor",href:"#octo","aria-hidden":"true"},"#",-1),jn=s(),Nn={href:"https://github.com/pwntester/octo.nvim",target:"_blank",rel:"noopener noreferrer"},Fn=s("octo"),Ln=e(`<p><strong>edit and review GitHub issues and pull requests</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;pwntester/octo.nvim&quot;</span><span class="token punctuation">,</span>
  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>`,2),Vn={id:"vim-fugitive",tabindex:"-1"},In=n("a",{class:"header-anchor",href:"#vim-fugitive","aria-hidden":"true"},"#",-1),Mn=s(),Wn={href:"https://github.com/tpope/vim-fugitive",target:"_blank",rel:"noopener noreferrer"},Hn=s("vim-fugitive"),Dn=e(`<p><strong>git wrapper</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;tpope/vim-fugitive&quot;</span><span class="token punctuation">,</span>
  cmd <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;G&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Git&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Gdiffsplit&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Gread&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Gwrite&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Ggrep&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;GMove&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;GDelete&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;GBrowse&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;GRemove&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;GRename&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Glgrep&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Gedit&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  ft <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;fugitive&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div>`,2),On={id:"vim-gist",tabindex:"-1"},Jn=n("a",{class:"header-anchor",href:"#vim-gist","aria-hidden":"true"},"#",-1),Kn=s(),Qn={href:"https://github.com/mattn/vim-gist",target:"_blank",rel:"noopener noreferrer"},Un=s("vim-gist"),Yn=e(`<p><strong>create/edit Github gists</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;mattn/vim-gist&quot;</span><span class="token punctuation">,</span>
  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>
  requires <span class="token operator">=</span> <span class="token string">&quot;mattn/webapi-vim&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="treesitter" tabindex="-1"><a class="header-anchor" href="#treesitter" aria-hidden="true">#</a> Treesitter</h2>`,3),Xn={id:"nvim-ts-autotag",tabindex:"-1"},Zn=n("a",{class:"header-anchor",href:"#nvim-ts-autotag","aria-hidden":"true"},"#",-1),$n=s(),ns={href:"https://github.com/windwp/nvim-ts-autotag",target:"_blank",rel:"noopener noreferrer"},ss=s("nvim-ts-autotag"),as=e(`<p><strong>autoclose and autorename html tag</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;windwp/nvim-ts-autotag&quot;</span><span class="token punctuation">,</span>
  event <span class="token operator">=</span> <span class="token string">&quot;InsertEnter&quot;</span><span class="token punctuation">,</span>
  config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;nvim-ts-autotag&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">end</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>`,2),ts={id:"nvim-ts-context-commentstring",tabindex:"-1"},es=n("a",{class:"header-anchor",href:"#nvim-ts-context-commentstring","aria-hidden":"true"},"#",-1),ps=s(),os={href:"https://github.com/JoosepAlviste/nvim-ts-context-commentstring",target:"_blank",rel:"noopener noreferrer"},cs=s("nvim-ts-context-commentstring"),ls=e(`<p><strong>commentstring option based on the cursor location</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;JoosepAlviste/nvim-ts-context-commentstring&quot;</span><span class="token punctuation">,</span>
  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>`,2),us={id:"nvim-ts-rainbow",tabindex:"-1"},is=n("a",{class:"header-anchor",href:"#nvim-ts-rainbow","aria-hidden":"true"},"#",-1),rs=s(),ks={href:"https://github.com/p00f/nvim-ts-rainbow",target:"_blank",rel:"noopener noreferrer"},ds=s("nvim-ts-rainbow"),bs=e(`<p><strong>rainbow parentheses</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;p00f/nvim-ts-rainbow&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,2),ms={id:"playground",tabindex:"-1"},gs=n("a",{class:"header-anchor",href:"#playground","aria-hidden":"true"},"#",-1),hs=s(),_s={href:"https://github.com/nvim-treesitter/playground",target:"_blank",rel:"noopener noreferrer"},vs=s("playground"),qs=e(`<p><strong>view treesitter information</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;nvim-treesitter/playground&quot;</span><span class="token punctuation">,</span>
  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="telescope-extensions" tabindex="-1"><a class="header-anchor" href="#telescope-extensions" aria-hidden="true">#</a> Telescope Extensions</h2>`,3),fs={id:"telescope-fzy-native-nvim",tabindex:"-1"},ws=n("a",{class:"header-anchor",href:"#telescope-fzy-native-nvim","aria-hidden":"true"},"#",-1),ys=s(),xs={href:"https://github.com/nvim-telescope/telescope-fzy-native.nvim",target:"_blank",rel:"noopener noreferrer"},Bs=s("telescope-fzy-native.nvim"),Rs=e(`<p><strong>fzy style sorter that is compiled</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;nvim-telescope/telescope-fzy-native.nvim&quot;</span><span class="token punctuation">,</span>
  run <span class="token operator">=</span> <span class="token string">&quot;make&quot;</span><span class="token punctuation">,</span>
  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,2),Gs={id:"telescope-project",tabindex:"-1"},Ts=n("a",{class:"header-anchor",href:"#telescope-project","aria-hidden":"true"},"#",-1),zs=s(),Cs={href:"https://github.com/nvim-telescope/telescope-project.nvim",target:"_blank",rel:"noopener noreferrer"},Ss=s("telescope-project"),Es=e(`<p><strong>switch between projects</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;nvim-telescope/telescope-project.nvim&quot;</span><span class="token punctuation">,</span>
  event <span class="token operator">=</span> <span class="token string">&quot;BufWinEnter&quot;</span><span class="token punctuation">,</span>
  setup <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    vim<span class="token punctuation">.</span>cmd <span class="token string">[[packadd telescope.nvim]]</span>
  <span class="token keyword">end</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="colorschemes" tabindex="-1"><a class="header-anchor" href="#colorschemes" aria-hidden="true">#</a> Colorschemes</h2>`,3),Ps={id:"lsp-colors",tabindex:"-1"},As=n("a",{class:"header-anchor",href:"#lsp-colors","aria-hidden":"true"},"#",-1),js=s(),Ns={href:"https://github.com/folke/lsp-colors.nvim",target:"_blank",rel:"noopener noreferrer"},Fs=s("lsp-colors"),Ls=e(`<p><strong>lsp diagnostics highlight groups for non lsp colorschemes</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;folke/lsp-colors.nvim&quot;</span><span class="token punctuation">,</span>
  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>`,2),Vs={id:"lush-nvim",tabindex:"-1"},Is=n("a",{class:"header-anchor",href:"#lush-nvim","aria-hidden":"true"},"#",-1),Ms=s(),Ws={href:"https://github.com/rktjmp/lush.nvim",target:"_blank",rel:"noopener noreferrer"},Hs=s("lush.nvim"),Ds=e(`<p><strong>colorscheme creation aid</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;rktjmp/lush.nvim&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,2),Os={id:"nvim-colorizer",tabindex:"-1"},Js=n("a",{class:"header-anchor",href:"#nvim-colorizer","aria-hidden":"true"},"#",-1),Ks=s(),Qs={href:"https://github.com/norcalli/nvim-colorizer.lua",target:"_blank",rel:"noopener noreferrer"},Us=s("nvim-colorizer"),Ys=e(`<p><strong>color highlighter</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;norcalli/nvim-colorizer.lua&quot;</span><span class="token punctuation">,</span>
    config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;colorizer&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string">&quot;*&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
          RGB <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span> <span class="token comment">-- #RGB hex codes</span>
          RRGGBB <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span> <span class="token comment">-- #RRGGBB hex codes</span>
          RRGGBBAA <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span> <span class="token comment">-- #RRGGBBAA hex codes</span>
          rgb_fn <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span> <span class="token comment">-- CSS rgb() and rgba() functions</span>
          hsl_fn <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span> <span class="token comment">-- CSS hsl() and hsla() functions</span>
          css <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span> <span class="token comment">-- Enable all CSS features: rgb_fn, hsl_fn, names, RGB, RRGGBB</span>
          css_fn <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span> <span class="token comment">-- Enable all CSS *functions*: rgb_fn, hsl_fn</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">end</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="lsp-enhancement" tabindex="-1"><a class="header-anchor" href="#lsp-enhancement" aria-hidden="true">#</a> LSP Enhancement</h2>`,3),Xs={id:"cmp-tabnine",tabindex:"-1"},Zs=n("a",{class:"header-anchor",href:"#cmp-tabnine","aria-hidden":"true"},"#",-1),$s=s(),na={href:"https://github.com/tzachar/cmp-tabnine",target:"_blank",rel:"noopener noreferrer"},sa=s("cmp-tabnine"),aa=e(`<p><strong>TabNine completion engine for hrsh7th/nvim-cmp</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;tzachar/cmp-tabnine&quot;</span><span class="token punctuation">,</span>
  run <span class="token operator">=</span> <span class="token string">&quot;./install.sh&quot;</span><span class="token punctuation">,</span>
  requires <span class="token operator">=</span> <span class="token string">&quot;hrsh7th/nvim-cmp&quot;</span><span class="token punctuation">,</span>
  event <span class="token operator">=</span> <span class="token string">&quot;InsertEnter&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>`,2),ta={id:"goto-preview",tabindex:"-1"},ea=n("a",{class:"header-anchor",href:"#goto-preview","aria-hidden":"true"},"#",-1),pa=s(),oa={href:"https://github.com/rmagatti/goto-preview",target:"_blank",rel:"noopener noreferrer"},ca=s("goto-preview"),la=e(`<p><strong>previewing goto definition calls</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;rmagatti/goto-preview&quot;</span><span class="token punctuation">,</span>
  config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;goto-preview&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setup</span> <span class="token punctuation">{</span>
        width <span class="token operator">=</span> <span class="token number">120</span><span class="token punctuation">;</span> <span class="token comment">-- Width of the floating window</span>
        height <span class="token operator">=</span> <span class="token number">25</span><span class="token punctuation">;</span> <span class="token comment">-- Height of the floating window</span>
        default_mappings <span class="token operator">=</span> <span class="token keyword">false</span><span class="token punctuation">;</span> <span class="token comment">-- Bind default mappings</span>
        debug <span class="token operator">=</span> <span class="token keyword">false</span><span class="token punctuation">;</span> <span class="token comment">-- Print debug information</span>
        opacity <span class="token operator">=</span> <span class="token keyword">nil</span><span class="token punctuation">;</span> <span class="token comment">-- 0-100 opacity level of the floating window where 100 is fully transparent.</span>
        post_open_hook <span class="token operator">=</span> <span class="token keyword">nil</span> <span class="token comment">-- A function taking two arguments, a buffer and a window to be ran as a hook.</span>
        <span class="token comment">-- You can use &quot;default_mappings = true&quot; setup option</span>
        <span class="token comment">-- Or explicitly set keybindings</span>
        <span class="token comment">-- vim.cmd(&quot;nnoremap gpd &lt;cmd&gt;lua require(&#39;goto-preview&#39;).goto_preview_definition()&lt;CR&gt;&quot;)</span>
        <span class="token comment">-- vim.cmd(&quot;nnoremap gpi &lt;cmd&gt;lua require(&#39;goto-preview&#39;).goto_preview_implementation()&lt;CR&gt;&quot;)</span>
        <span class="token comment">-- vim.cmd(&quot;nnoremap gP &lt;cmd&gt;lua require(&#39;goto-preview&#39;).close_all_win()&lt;CR&gt;&quot;)</span>
    <span class="token punctuation">}</span>
  <span class="token keyword">end</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div>`,2),ua={id:"lsp-rooter",tabindex:"-1"},ia=n("a",{class:"header-anchor",href:"#lsp-rooter","aria-hidden":"true"},"#",-1),ra=s(),ka={href:"https://github.com/ahmedkhalf/lsp-rooter.nvim",target:"_blank",rel:"noopener noreferrer"},da=s("lsp-rooter"),ba=e(`<p><strong>cwd to the project&#39;s root directory</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;ahmedkhalf/lsp-rooter.nvim&quot;</span><span class="token punctuation">,</span>
  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>
  config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;lsp-rooter&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">end</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>`,2),ma={id:"lsp-signature-nvim",tabindex:"-1"},ga=n("a",{class:"header-anchor",href:"#lsp-signature-nvim","aria-hidden":"true"},"#",-1),ha=s(),_a={href:"https://github.com/ray-x/lsp_signature.nvim",target:"_blank",rel:"noopener noreferrer"},va=s("lsp_signature.nvim"),qa=e(`<p><strong>hint when you type</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;ray-x/lsp_signature.nvim&quot;</span><span class="token punctuation">,</span>
  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>
  config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    require <span class="token string">&quot;lsp_signature&quot;</span><span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">end</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>`,2),fa={id:"symbols-outline-nvim",tabindex:"-1"},wa=n("a",{class:"header-anchor",href:"#symbols-outline-nvim","aria-hidden":"true"},"#",-1),ya=s(),xa={href:"https://github.com/simrat39/symbols-outline.nvim",target:"_blank",rel:"noopener noreferrer"},Ba=s("symbols-outline.nvim"),Ra=e(`<p><strong>a tree like view for symbols</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;simrat39/symbols-outline.nvim&quot;</span><span class="token punctuation">,</span>
  cmd <span class="token operator">=</span> <span class="token string">&quot;SymbolsOutline&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>`,2),Ga={id:"trouble-nvim",tabindex:"-1"},Ta=n("a",{class:"header-anchor",href:"#trouble-nvim","aria-hidden":"true"},"#",-1),za=s(),Ca={href:"https://github.com/folke/trouble.nvim",target:"_blank",rel:"noopener noreferrer"},Sa=s("trouble.nvim"),Ea=e(`<p><strong>diagnostics, references, telescope results, quickfix and location lists</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;folke/trouble.nvim&quot;</span><span class="token punctuation">,</span>
    cmd <span class="token operator">=</span> <span class="token string">&quot;TroubleToggle&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Also define keybindings in <code>config.lua</code></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code>lvim<span class="token punctuation">.</span>builtin<span class="token punctuation">.</span>which_key<span class="token punctuation">.</span>mappings<span class="token punctuation">[</span><span class="token string">&quot;t&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  name <span class="token operator">=</span> <span class="token string">&quot;Diagnostics&quot;</span><span class="token punctuation">,</span>
  t <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;&lt;cmd&gt;TroubleToggle&lt;cr&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;trouble&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  w <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;&lt;cmd&gt;TroubleToggle lsp_workspace_diagnostics&lt;cr&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;workspace&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  d <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;&lt;cmd&gt;TroubleToggle lsp_document_diagnostics&lt;cr&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;document&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  q <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;&lt;cmd&gt;TroubleToggle quickfix&lt;cr&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;quickfix&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  l <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;&lt;cmd&gt;TroubleToggle loclist&lt;cr&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;loclist&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  r <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;&lt;cmd&gt;TroubleToggle lsp_references&lt;cr&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;references&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="general" tabindex="-1"><a class="header-anchor" href="#general" aria-hidden="true">#</a> General</h2>`,5),Pa={id:"autosave",tabindex:"-1"},Aa=n("a",{class:"header-anchor",href:"#autosave","aria-hidden":"true"},"#",-1),ja=s(),Na={href:"https://github.com/Pocco81/AutoSave.nvim",target:"_blank",rel:"noopener noreferrer"},Fa=s("autosave"),La=e(`<p><strong>automatically saving your work whenever you make changes to it</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;Pocco81/AutoSave.nvim&quot;</span><span class="token punctuation">,</span>
  config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;autosave&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">end</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>`,2),Va={id:"codi-vim",tabindex:"-1"},Ia=n("a",{class:"header-anchor",href:"#codi-vim","aria-hidden":"true"},"#",-1),Ma=s(),Wa={href:"https://github.com/metakirby5/codi.vim",target:"_blank",rel:"noopener noreferrer"},Ha=s("codi.vim"),Da=e(`<p><strong>interactive scratchpad for hackers</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;metakirby5/codi.vim&quot;</span><span class="token punctuation">,</span>
  cmd <span class="token operator">=</span> <span class="token string">&quot;Codi&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>`,2),Oa={id:"dial-nvim",tabindex:"-1"},Ja=n("a",{class:"header-anchor",href:"#dial-nvim","aria-hidden":"true"},"#",-1),Ka=s(),Qa={href:"https://github.com/monaqa/dial.nvim",target:"_blank",rel:"noopener noreferrer"},Ua=s("dial.nvim"),Ya=e(`<p><strong>extended incrementing/decrementing</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;monaqa/dial.nvim&quot;</span><span class="token punctuation">,</span>
  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>
  config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">local</span> dial <span class="token operator">=</span> require <span class="token string">&quot;dial&quot;</span>
    vim<span class="token punctuation">.</span>cmd <span class="token string">[[
    nmap &lt;C-a&gt; &lt;Plug&gt;(dial-increment)
      nmap &lt;C-x&gt; &lt;Plug&gt;(dial-decrement)
      vmap &lt;C-a&gt; &lt;Plug&gt;(dial-increment)
      vmap &lt;C-x&gt; &lt;Plug&gt;(dial-decrement)
      vmap g&lt;C-a&gt; &lt;Plug&gt;(dial-increment-additional)
      vmap g&lt;C-x&gt; &lt;Plug&gt;(dial-decrement-additional)
    ]]</span>

    dial<span class="token punctuation">.</span>augends<span class="token punctuation">[</span><span class="token string">&quot;custom#boolean&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> dial<span class="token punctuation">.</span>common<span class="token punctuation">.</span><span class="token function">enum_cyclic</span> <span class="token punctuation">{</span>
      name <span class="token operator">=</span> <span class="token string">&quot;boolean&quot;</span><span class="token punctuation">,</span>
      strlist <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;true&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;false&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    table<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>dial<span class="token punctuation">.</span>config<span class="token punctuation">.</span>searchlist<span class="token punctuation">.</span>normal<span class="token punctuation">,</span> <span class="token string">&quot;custom#boolean&quot;</span><span class="token punctuation">)</span>

    <span class="token comment">-- For Languages which prefer True/False, e.g. python.</span>
    dial<span class="token punctuation">.</span>augends<span class="token punctuation">[</span><span class="token string">&quot;custom#Boolean&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> dial<span class="token punctuation">.</span>common<span class="token punctuation">.</span><span class="token function">enum_cyclic</span> <span class="token punctuation">{</span>
      name <span class="token operator">=</span> <span class="token string">&quot;Boolean&quot;</span><span class="token punctuation">,</span>
      strlist <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;True&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;False&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    table<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>dial<span class="token punctuation">.</span>config<span class="token punctuation">.</span>searchlist<span class="token punctuation">.</span>normal<span class="token punctuation">,</span> <span class="token string">&quot;custom#Boolean&quot;</span><span class="token punctuation">)</span>
  <span class="token keyword">end</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>

</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div>`,2),Xa={id:"glow-nvim",tabindex:"-1"},Za=n("a",{class:"header-anchor",href:"#glow-nvim","aria-hidden":"true"},"#",-1),$a=s(),nt={href:"https://github.com/npxbr/glow.nvim",target:"_blank",rel:"noopener noreferrer"},st=s("glow.nvim"),at=e(`<p><strong>preview markdown in neovim</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token comment">-- You must install glow globally</span>
<span class="token comment">-- https://github.com/charmbracelet/glow</span>
<span class="token comment">-- yay -S glow</span>
<span class="token punctuation">{</span>
  <span class="token string">&quot;npxbr/glow.nvim&quot;</span><span class="token punctuation">,</span>
  ft <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;markdown&quot;</span><span class="token punctuation">}</span>
  <span class="token comment">-- run = &quot;yay -S glow&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>`,2),tt={id:"indent-blankline",tabindex:"-1"},et=n("a",{class:"header-anchor",href:"#indent-blankline","aria-hidden":"true"},"#",-1),pt=s(),ot={href:"https://github.com/lukas-reineke/indent-blankline.nvim",target:"_blank",rel:"noopener noreferrer"},ct=s("indent-blankline"),lt=e(`<p><strong>indentation guides for every line</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;lukas-reineke/indent-blankline.nvim&quot;</span><span class="token punctuation">,</span>
  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>
  setup <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    vim<span class="token punctuation">.</span>g<span class="token punctuation">.</span>indentLine_enabled <span class="token operator">=</span> <span class="token number">1</span>
    vim<span class="token punctuation">.</span>g<span class="token punctuation">.</span>indent_blankline_char <span class="token operator">=</span> <span class="token string">&quot;\u258F&quot;</span>
    vim<span class="token punctuation">.</span>g<span class="token punctuation">.</span>indent_blankline_filetype_exclude <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;help&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;terminal&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;dashboard&quot;</span><span class="token punctuation">}</span>
    vim<span class="token punctuation">.</span>g<span class="token punctuation">.</span>indent_blankline_buftype_exclude <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;terminal&quot;</span><span class="token punctuation">}</span>
    vim<span class="token punctuation">.</span>g<span class="token punctuation">.</span>indent_blankline_show_trailing_blankline_indent <span class="token operator">=</span> <span class="token keyword">false</span>
    vim<span class="token punctuation">.</span>g<span class="token punctuation">.</span>indent_blankline_show_first_indent_level <span class="token operator">=</span> <span class="token keyword">false</span>
  <span class="token keyword">end</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div>`,2),ut={id:"markdown-preview-nvim",tabindex:"-1"},it=n("a",{class:"header-anchor",href:"#markdown-preview-nvim","aria-hidden":"true"},"#",-1),rt=s(),kt={href:"https://github.com/iamcco/markdown-preview.nvim",target:"_blank",rel:"noopener noreferrer"},dt=s("markdown-preview.nvim"),bt=e(`<p><strong>preview markdown in the browser</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;iamcco/markdown-preview.nvim&quot;</span><span class="token punctuation">,</span>
  run <span class="token operator">=</span> <span class="token string">&quot;cd app &amp;&amp; npm install&quot;</span><span class="token punctuation">,</span>
  ft <span class="token operator">=</span> <span class="token string">&quot;markdown&quot;</span><span class="token punctuation">,</span>
  config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    vim<span class="token punctuation">.</span>g<span class="token punctuation">.</span>mkdp_auto_start <span class="token operator">=</span> <span class="token number">1</span>
  <span class="token keyword">end</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>`,2),mt={id:"neoscroll",tabindex:"-1"},gt=n("a",{class:"header-anchor",href:"#neoscroll","aria-hidden":"true"},"#",-1),ht=s(),_t={href:"https://github.com/karb94/neoscroll.nvim",target:"_blank",rel:"noopener noreferrer"},vt=s("neoscroll"),qt=e(`<p><strong>smooth scrolling</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;karb94/neoscroll.nvim&quot;</span><span class="token punctuation">,</span>
  event <span class="token operator">=</span> <span class="token string">&quot;WinScrolled&quot;</span><span class="token punctuation">,</span>
  config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;neoscroll&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token comment">-- All these keys will be mapped to their corresponding default scrolling animation</span>
        mappings <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;&lt;C-u&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&lt;C-d&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&lt;C-b&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&lt;C-f&gt;&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;&lt;C-y&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&lt;C-e&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;zt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;zz&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;zb&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        hide_cursor <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span>          <span class="token comment">-- Hide cursor while scrolling</span>
        stop_eof <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span>             <span class="token comment">-- Stop at &lt;EOF&gt; when scrolling downwards</span>
        use_local_scrolloff <span class="token operator">=</span> <span class="token keyword">false</span><span class="token punctuation">,</span> <span class="token comment">-- Use the local scope of scrolloff instead of the global scope</span>
        respect_scrolloff <span class="token operator">=</span> <span class="token keyword">false</span><span class="token punctuation">,</span>   <span class="token comment">-- Stop scrolling when the cursor reaches the scrolloff margin of the file</span>
        cursor_scrolls_alone <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span> <span class="token comment">-- The cursor will keep on scrolling even if the window cannot scroll further</span>
        easing_function <span class="token operator">=</span> <span class="token keyword">nil</span><span class="token punctuation">,</span>        <span class="token comment">-- Default easing function</span>
        pre_hook <span class="token operator">=</span> <span class="token keyword">nil</span><span class="token punctuation">,</span>              <span class="token comment">-- Function to run before the scrolling animation starts</span>
        post_hook <span class="token operator">=</span> <span class="token keyword">nil</span><span class="token punctuation">,</span>              <span class="token comment">-- Function to run after the scrolling animation ends</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">end</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div>`,2),ft={id:"neuron",tabindex:"-1"},wt=n("a",{class:"header-anchor",href:"#neuron","aria-hidden":"true"},"#",-1),yt=s(),xt={href:"https://github.com/oberblastmeister/neuron.nvim",target:"_blank",rel:"noopener noreferrer"},Bt=s("neuron"),Rt=e(`<p><strong>next generation note-taking</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code>	<span class="token punctuation">{</span><span class="token string">&quot;oberblastmeister/neuron.nvim&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>`,2),Gt={id:"nvim-lastplace",tabindex:"-1"},Tt=n("a",{class:"header-anchor",href:"#nvim-lastplace","aria-hidden":"true"},"#",-1),zt=s(),Ct={href:"https://github.com/ethanholz/nvim-lastplace",target:"_blank",rel:"noopener noreferrer"},St=s("nvim-lastplace"),Et=e(`<p><strong>pick up where you left off</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code>	<span class="token punctuation">{</span>
		<span class="token string">&quot;ethanholz/nvim-lastplace&quot;</span><span class="token punctuation">,</span>
		event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>
		config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
			<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;nvim-lastplace&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
				lastplace_ignore_buftype <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;quickfix&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;nofile&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;help&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
				lastplace_ignore_filetype <span class="token operator">=</span> <span class="token punctuation">{</span>
					<span class="token string">&quot;gitcommit&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;gitrebase&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;svn&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hgcommit&quot;</span><span class="token punctuation">,</span>
				<span class="token punctuation">}</span><span class="token punctuation">,</span>
				lastplace_open_folds <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span>
			<span class="token punctuation">}</span><span class="token punctuation">)</span>
		<span class="token keyword">end</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div>`,2),Pt={id:"persistence",tabindex:"-1"},At=n("a",{class:"header-anchor",href:"#persistence","aria-hidden":"true"},"#",-1),jt=s(),Nt={href:"https://github.com/folke/persistence.nvim",target:"_blank",rel:"noopener noreferrer"},Ft=s("persistence"),Lt=e(`<p><strong>simple session management</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;folke/persistence.nvim&quot;</span><span class="token punctuation">,</span>
    event <span class="token operator">=</span> <span class="token string">&quot;BufReadPre&quot;</span><span class="token punctuation">,</span> <span class="token comment">-- this will only start session saving when an actual file was opened</span>
    module <span class="token operator">=</span> <span class="token string">&quot;persistence&quot;</span><span class="token punctuation">,</span>
    config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;persistence&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setup</span> <span class="token punctuation">{</span>
        dir <span class="token operator">=</span> vim<span class="token punctuation">.</span>fn<span class="token punctuation">.</span><span class="token function">expand</span><span class="token punctuation">(</span>vim<span class="token punctuation">.</span>fn<span class="token punctuation">.</span>stdpath <span class="token string">&quot;config&quot;</span> <span class="token operator">..</span> <span class="token string">&quot;/session/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        options <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;buffers&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;curdir&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;tabpages&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;winsize&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
  <span class="token keyword">end</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>Also define keybindings in your <code>config.lua</code></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code>  lvim<span class="token punctuation">.</span>builtin<span class="token punctuation">.</span>which_key<span class="token punctuation">.</span>mappings<span class="token punctuation">[</span><span class="token string">&quot;S&quot;</span><span class="token punctuation">]</span><span class="token operator">=</span> <span class="token punctuation">{</span>
    name <span class="token operator">=</span> <span class="token string">&quot;Session&quot;</span><span class="token punctuation">,</span>
    c <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;&lt;cmd&gt;lua require(&#39;persistence&#39;).load()&lt;cr&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Restore last session for current dir&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    l <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;&lt;cmd&gt;lua require(&#39;persistence&#39;).load({ last = true })&lt;cr&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Restore last session&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    Q <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;&lt;cmd&gt;lua require(&#39;persistence&#39;).stop()&lt;cr&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Quit without saving session&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>`,4),Vt={id:"todo-comments-nvim",tabindex:"-1"},It=n("a",{class:"header-anchor",href:"#todo-comments-nvim","aria-hidden":"true"},"#",-1),Mt=s(),Wt={href:"https://github.com/folke/todo-comments.nvim",target:"_blank",rel:"noopener noreferrer"},Ht=s("todo-comments.nvim"),Dt=e(`<p><strong>highlight and search for todo comments</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;folke/todo-comments.nvim&quot;</span><span class="token punctuation">,</span>
  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>
  config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;todo-comments&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">end</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>`,2),Ot={id:"vim-cursorword",tabindex:"-1"},Jt=n("a",{class:"header-anchor",href:"#vim-cursorword","aria-hidden":"true"},"#",-1),Kt=s(),Qt={href:"https://github.com/itchyny/vim-cursorword",target:"_blank",rel:"noopener noreferrer"},Ut=s("vim-cursorword"),Yt=e(`<p><strong>underlines the word under the cursor</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;itchyny/vim-cursorword&quot;</span><span class="token punctuation">,</span>
    event <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;BufEnter&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;BufNewFile&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      vim<span class="token punctuation">.</span>api<span class="token punctuation">.</span><span class="token function">nvim_command</span><span class="token punctuation">(</span><span class="token string">&quot;augroup user_plugin_cursorword&quot;</span><span class="token punctuation">)</span>
      vim<span class="token punctuation">.</span>api<span class="token punctuation">.</span><span class="token function">nvim_command</span><span class="token punctuation">(</span><span class="token string">&quot;autocmd!&quot;</span><span class="token punctuation">)</span>
      vim<span class="token punctuation">.</span>api<span class="token punctuation">.</span><span class="token function">nvim_command</span><span class="token punctuation">(</span><span class="token string">&quot;autocmd FileType NvimTree,lspsagafinder,dashboard,vista let b:cursorword = 0&quot;</span><span class="token punctuation">)</span>
      vim<span class="token punctuation">.</span>api<span class="token punctuation">.</span><span class="token function">nvim_command</span><span class="token punctuation">(</span><span class="token string">&quot;autocmd WinEnter * if &amp;diff || &amp;pvw | let b:cursorword = 0 | endif&quot;</span><span class="token punctuation">)</span>
      vim<span class="token punctuation">.</span>api<span class="token punctuation">.</span><span class="token function">nvim_command</span><span class="token punctuation">(</span><span class="token string">&quot;autocmd InsertEnter * let b:cursorword = 0&quot;</span><span class="token punctuation">)</span>
      vim<span class="token punctuation">.</span>api<span class="token punctuation">.</span><span class="token function">nvim_command</span><span class="token punctuation">(</span><span class="token string">&quot;autocmd InsertLeave * let b:cursorword = 1&quot;</span><span class="token punctuation">)</span>
      vim<span class="token punctuation">.</span>api<span class="token punctuation">.</span><span class="token function">nvim_command</span><span class="token punctuation">(</span><span class="token string">&quot;augroup END&quot;</span><span class="token punctuation">)</span>
      <span class="token keyword">end</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div>`,2),Xt={id:"vim-repeat",tabindex:"-1"},Zt=n("a",{class:"header-anchor",href:"#vim-repeat","aria-hidden":"true"},"#",-1),$t=s(),ne={href:"https://github.com/tpope/vim-repeat",target:"_blank",rel:"noopener noreferrer"},se=s("vim-repeat"),ae=e(`<p><strong>enable repeating supported plugin maps with &quot;.&quot;</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span> <span class="token string">&quot;tpope/vim-repeat&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>`,2),te={id:"vim-sanegx",tabindex:"-1"},ee=n("a",{class:"header-anchor",href:"#vim-sanegx","aria-hidden":"true"},"#",-1),pe=s(),oe={href:"https://github.com/felipec/vim-sanegx",target:"_blank",rel:"noopener noreferrer"},ce=s("vim-sanegx"),le=e(`<p><strong>open url with <code>gx</code></strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;felipec/vim-sanegx&quot;</span><span class="token punctuation">,</span>
  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>`,2),ue={id:"vim-surround",tabindex:"-1"},ie=n("a",{class:"header-anchor",href:"#vim-surround","aria-hidden":"true"},"#",-1),re=s(),ke={href:"https://github.com/tpope/vim-surround",target:"_blank",rel:"noopener noreferrer"},de=s("vim-surround"),be=e(`<p><strong>mappings to delete, change and add surroundings</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;tpope/vim-surround&quot;</span><span class="token punctuation">,</span>
  keys <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;c&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;d&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;y&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>`,2),me={id:"vim-wakatime",tabindex:"-1"},ge=n("a",{class:"header-anchor",href:"#vim-wakatime","aria-hidden":"true"},"#",-1),he=s(),_e={href:"https://github.com/wakatime/vim-wakatime",target:"_blank",rel:"noopener noreferrer"},ve=s("vim-wakatime"),qe=e(`<p><strong>metrics, insights, and time tracking automatically generated from your programming activity</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;wakatime/vim-wakatime&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Once installed and synced, add your WakaTime API Key via <code>:WakaTimeApiKey</code> command</p><h2 id="language-specific" tabindex="-1"><a class="header-anchor" href="#language-specific" aria-hidden="true">#</a> Language specific</h2>`,4),fe={id:"bracey",tabindex:"-1"},we=n("a",{class:"header-anchor",href:"#bracey","aria-hidden":"true"},"#",-1),ye=s(),xe={href:"https://github.com/turbio/bracey.vim",target:"_blank",rel:"noopener noreferrer"},Be=s("bracey"),Re=e(`<p><strong>live edit html, css, and javascript</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;turbio/bracey.vim&quot;</span><span class="token punctuation">,</span>
  cmd <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;Bracey&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;BracyStop&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;BraceyReload&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;BraceyEval&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  run <span class="token operator">=</span> <span class="token string">&quot;npm install --prefix server&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,2),Ge={id:"vim-bundler",tabindex:"-1"},Te=n("a",{class:"header-anchor",href:"#vim-bundler","aria-hidden":"true"},"#",-1),ze=s(),Ce={href:"https://github.com/tpope/vim-bundler",target:"_blank",rel:"noopener noreferrer"},Se=s("vim-bundler"),Ee=e(`<p><strong>lightweight support for ruby&#39;s bundler</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;tpope/vim-bundler&quot;</span><span class="token punctuation">,</span>
  cmd <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;Bundler&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Bopen&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Bsplit&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Btabedit&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>`,2),Pe={id:"vim-rails",tabindex:"-1"},Ae=n("a",{class:"header-anchor",href:"#vim-rails","aria-hidden":"true"},"#",-1),je=s(),Ne={href:"https://github.com/tpope/vim-rails",target:"_blank",rel:"noopener noreferrer"},Fe=s("vim-rails"),Le=e(`<p><strong>edit ruby on rails applications</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;tpope/vim-rails&quot;</span><span class="token punctuation">,</span>
  cmd <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;Eview&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Econtroller&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Emodel&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Smodel&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Sview&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Scontroller&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Vmodel&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Vview&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Vcontroller&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Tmodel&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Tview&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Tcontroller&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Rails&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Generate&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Runner&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Extract&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>

</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div>`,2);function Ve(Ie,Me){const a=p("ExternalLinkIcon");return o(),c(l,null,[r,k,d,n("h3",b,[m,g,n("a",h,[_,t(a)])]),v,n("h3",q,[f,w,n("a",y,[x,t(a)])]),B,n("h3",R,[G,T,n("a",z,[C,t(a)])]),S,n("h3",E,[P,A,n("a",j,[N,t(a)])]),F,n("h3",L,[V,I,n("a",M,[W,t(a)])]),H,n("h3",D,[O,J,n("a",K,[Q,t(a)])]),U,n("h3",Y,[X,Z,n("a",$,[nn,t(a)])]),sn,n("h3",an,[tn,en,n("a",pn,[on,t(a)])]),cn,n("h3",ln,[un,rn,n("a",kn,[dn,t(a)])]),bn,n("h3",mn,[gn,hn,n("a",_n,[vn,t(a)])]),qn,n("h3",fn,[wn,yn,n("a",xn,[Bn,t(a)])]),Rn,n("h3",Gn,[Tn,zn,n("a",Cn,[Sn,t(a)])]),En,n("h3",Pn,[An,jn,n("a",Nn,[Fn,t(a)])]),Ln,n("h3",Vn,[In,Mn,n("a",Wn,[Hn,t(a)])]),Dn,n("h3",On,[Jn,Kn,n("a",Qn,[Un,t(a)])]),Yn,n("h3",Xn,[Zn,$n,n("a",ns,[ss,t(a)])]),as,n("h3",ts,[es,ps,n("a",os,[cs,t(a)])]),ls,n("h3",us,[is,rs,n("a",ks,[ds,t(a)])]),bs,n("h3",ms,[gs,hs,n("a",_s,[vs,t(a)])]),qs,n("h3",fs,[ws,ys,n("a",xs,[Bs,t(a)])]),Rs,n("h3",Gs,[Ts,zs,n("a",Cs,[Ss,t(a)])]),Es,n("h3",Ps,[As,js,n("a",Ns,[Fs,t(a)])]),Ls,n("h3",Vs,[Is,Ms,n("a",Ws,[Hs,t(a)])]),Ds,n("h3",Os,[Js,Ks,n("a",Qs,[Us,t(a)])]),Ys,n("h3",Xs,[Zs,$s,n("a",na,[sa,t(a)])]),aa,n("h3",ta,[ea,pa,n("a",oa,[ca,t(a)])]),la,n("h3",ua,[ia,ra,n("a",ka,[da,t(a)])]),ba,n("h3",ma,[ga,ha,n("a",_a,[va,t(a)])]),qa,n("h3",fa,[wa,ya,n("a",xa,[Ba,t(a)])]),Ra,n("h3",Ga,[Ta,za,n("a",Ca,[Sa,t(a)])]),Ea,n("h3",Pa,[Aa,ja,n("a",Na,[Fa,t(a)])]),La,n("h3",Va,[Ia,Ma,n("a",Wa,[Ha,t(a)])]),Da,n("h3",Oa,[Ja,Ka,n("a",Qa,[Ua,t(a)])]),Ya,n("h3",Xa,[Za,$a,n("a",nt,[st,t(a)])]),at,n("h3",tt,[et,pt,n("a",ot,[ct,t(a)])]),lt,n("h3",ut,[it,rt,n("a",kt,[dt,t(a)])]),bt,n("h3",mt,[gt,ht,n("a",_t,[vt,t(a)])]),qt,n("h3",ft,[wt,yt,n("a",xt,[Bt,t(a)])]),Rt,n("h3",Gt,[Tt,zt,n("a",Ct,[St,t(a)])]),Et,n("h3",Pt,[At,jt,n("a",Nt,[Ft,t(a)])]),Lt,n("h3",Vt,[It,Mt,n("a",Wt,[Ht,t(a)])]),Dt,n("h3",Ot,[Jt,Kt,n("a",Qt,[Ut,t(a)])]),Yt,n("h3",Xt,[Zt,$t,n("a",ne,[se,t(a)])]),ae,n("h3",te,[ee,pe,n("a",oe,[ce,t(a)])]),le,n("h3",ue,[ie,re,n("a",ke,[de,t(a)])]),be,n("h3",me,[ge,he,n("a",_e,[ve,t(a)])]),qe,n("h3",fe,[we,ye,n("a",xe,[Be,t(a)])]),Re,n("h3",Ge,[Te,ze,n("a",Ce,[Se,t(a)])]),Ee,n("h3",Pe,[Ae,je,n("a",Ne,[Fe,t(a)])]),Le],64)}var De=u(i,[["render",Ve]]);export{De as default};
